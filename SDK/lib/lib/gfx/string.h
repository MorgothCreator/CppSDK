/*
 * string.h
 *
 *  Created on: Dec 10, 2016
 *      Author: John Smith
 */

#ifndef LIB_LIB_GFX_STRING_H_
#define LIB_LIB_GFX_STRING_H_

#include <ctype.h>
#include <string.h>
#include <stdarg.h>
#include <api/lcd_def.h>
#include "resource/fonts.h"
#include <lib/string.h>
#include "gfxdef.h"

#define FONT_FMT_UNCOMPRESSED   0x00
#define ABSENT_CHAR_REPLACEMENT '.'

/*#####################################################*/
#define RGB_TO_UINT(R,G,B) ((R)<<16) | ((G)<<8) | ((B))

/*#####################################################*/
#ifdef HAVE_LONG_DOUBLE
#define LDOUBLE long double
#else
#define LDOUBLE double
#endif
/*#####################################################*/
#ifdef FLASH_DEVICE
const gfx_u8 CharTable6x8[] PROGMEM =
#else
static const gfx_u8 CharTable6x8[] =
#endif
{
	6                          ,0          ,6          ,8          ,32            ,128,
/*  OffsetOfBeginingCharTable  ,0=Y-X|1=X-X,X-Dimension,Y-Dimension,BeginAsciiChar,EndAsciiChar*/
	0x00,0x00,0x00,0x00,0x00,0x00,
	0x5F,0x00,0x00,0x00,0x00,0x00,//   !		32,33
	0x07,0x00,0x07,0x00,0x00,0x00,
	0x14,0x7F,0x14,0x7F,0x14,0x00,// " #		34,35
	0x24,0x2A,0x7F,0x2A,0x12,0x00,
	0x23,0x13,0x08,0x64,0x62,0x00,// 0x %		36,37
	0x36,0x49,0x55,0x22,0x50,0x00,
	0x05,0x03,0x00,0x00,0x00,0x00,// & '		38,39
	0x1C,0x22,0x41,0x00,0x00,0x00,
	0x41,0x22,0x1C,0x00,0x00,0x00,// ( )		40,41
	0x08,0x2A,0x1C,0x2A,0x08,0x00,
	0x08,0x08,0x3E,0x08,0x08,0x00,// * +		42,43
	0x50,0x30,0x00,0x00,0x00,0x00,
	0x08,0x08,0x08,0x00,0x00,0x00,// , -		44,45
	0x30,0x30,0x00,0x00,0x00,0x00,
	0x20,0x10,0x08,0x04,0x02,0x00,// . /		46,47
	0x3E,0x51,0x49,0x45,0x3E,0x00,
	0x42,0x7F,0x40,0x00,0x00,0x00,// 0 1		48,49
	0x42,0x61,0x51,0x49,0x46,0x00,
	0x21,0x41,0x45,0x4B,0x31,0x00,// 2 3		50,51
	0x18,0x14,0x12,0x7F,0x10,0x00,
	0x27,0x45,0x45,0x45,0x39,0x00,// 4 5		52,53
	0x3C,0x4A,0x49,0x49,0x30,0x00,
	0x01,0x71,0x09,0x05,0x03,0x00,// 6 7		54,55
	0x36,0x49,0x49,0x49,0x36,0x00,
	0x06,0x49,0x49,0x29,0x1E,0x00,// 8 9		56,57
	0x36,0x00,0x00,0x00,0x00,0x00,
	0x56,0x36,0x00,0x00,0x00,0x00,// : ;		58,59
	0x08,0x14,0x22,0x41,0x00,0x00,
	0x14,0x14,0x14,0x00,0x00,0x00,// < =		60,61
	0x41,0x22,0x14,0x08,0x00,0x00,
	0x02,0x01,0x51,0x09,0x06,0x00,// > ?		62,63
	0x32,0x49,0x79,0x41,0x3E,0x00,
	0x7E,0x11,0x11,0x7E,0x00,0x00,// @ A		64,65
	0x7F,0x49,0x49,0x36,0x00,0x00,
	0x3E,0x41,0x41,0x22,0x00,0x00,// B C		66,67
	0x7F,0x41,0x22,0x1C,0x00,0x00,
	0x7F,0x49,0x49,0x41,0x00,0x00,// D E		68,69
	0x7F,0x09,0x09,0x01,0x00,0x00,
	0x3E,0x41,0x51,0x32,0x00,0x00,// F G		70,71
	0x7F,0x08,0x08,0x7F,0x00,0x00,
	0x41,0x7F,0x41,0x00,0x00,0x00,// H I		72,73
	0x20,0x40,0x41,0x3F,0x01,0x00,
	0x7F,0x08,0x14,0x22,0x41,0x00,// J K		74,75
	0x7F,0x40,0x40,0x00,0x00,0x00,
	0x7F,0x02,0x04,0x02,0x7F,0x00,// L M		76,77
	0x7F,0x04,0x08,0x10,0x7F,0x00,
	0x3E,0x41,0x41,0x3E,0x00,0x00,// N O		78,79
	0x7F,0x09,0x09,0x06,0x00,0x00,
	0x3E,0x41,0x51,0x21,0x5E,0x00,// P Q		80,81
	0x7F,0x19,0x29,0x46,0x00,0x00,
	0x46,0x49,0x49,0x31,0x00,0x00,// R S		82,83
	0x01,0x7F,0x01,0x00,0x00,0x00,
	0x3F,0x40,0x40,0x3F,0x00,0x00,// T U		84,85
	0x1F,0x20,0x40,0x20,0x1F,0x00,
	0x7F,0x20,0x18,0x20,0x7F,0x00,// V W		86,87
	0x63,0x14,0x08,0x14,0x63,0x00,
	0x03,0x04,0x78,0x04,0x03,0x00,// X Y		88,89
	0x61,0x51,0x49,0x45,0x43,0x00,
	0x7F,0x41,0x41,0x00,0x00,0x00,// Z [		90,91
	0x02,0x04,0x08,0x10,0x20,0x00,
	0x41,0x41,0x7F,0x00,0x00,0x00,// \ ]		92,93
	0x04,0x02,0x01,0x02,0x04,0x00,
	0x40,0x40,0x40,0x00,0x00,0x00,// ^ _		94,95
	0x01,0x02,0x04,0x00,0x00,0x00,
	0x20,0x54,0x54,0x78,0x00,0x00,// ` a		96,97
	0x7F,0x48,0x44,0x38,0x00,0x00,
	0x38,0x44,0x44,0x00,0x00,0x00,// b c		98,99
	0x38,0x44,0x48,0x7F,0x00,0x00,
	0x38,0x54,0x54,0x18,0x00,0x00,// d e		100,101
	0x08,0x7E,0x09,0x01,0x00,0x00,
	0x08,0x14,0x54,0x3C,0x00,0x00,// f g		102,103
	0x7F,0x08,0x04,0x78,0x00,0x00,
	0x44,0x7D,0x40,0x00,0x00,0x00,// h i		104,105
	0x20,0x40,0x44,0x3D,0x00,0x00,
	0x7F,0x10,0x28,0x44,0x00,0x00,// j k		106,107
	0x41,0x7F,0x40,0x00,0x00,0x00,
	0x7C,0x04,0x18,0x04,0x78,0x00,// l m		108,109
	0x7C,0x08,0x04,0x78,0x00,0x00,
	0x38,0x44,0x44,0x38,0x00,0x00,// n o		110,111
	0x7C,0x14,0x14,0x08,0x00,0x00,
	0x08,0x14,0x18,0x7C,0x00,0x00,// p q		112,113
	0x7C,0x08,0x04,0x08,0x00,0x00,
	0x48,0x54,0x54,0x20,0x00,0x00,// r s		114,115
	0x04,0x3F,0x44,0x40,0x00,0x00,
	0x3C,0x40,0x20,0x7C,0x00,0x00,// t u		116,117
	0x1C,0x20,0x40,0x20,0x1C,0x00,
	0x3C,0x40,0x30,0x40,0x3C,0x00,// v w		118,119
	0x44,0x28,0x10,0x28,0x44,0x00,
	0x0C,0x50,0x50,0x3C,0x00,0x00,// x y		120,121
	0x44,0x64,0x54,0x4C,0x44,0x00,
	0x08,0x36,0x41,0x00,0x00,0x00,// z {		122,123
	0x7F,0x00,0x00,0x00,0x00,0x00,
	0x41,0x36,0x08,0x00,0x00,0x00,// | }		124,125
	0x08,0x2A,0x1C,0x08,0x00,0x00,
	0x08,0x1C,0x2A,0x08,0x00,0x00,// -> <-	126,127
	0x14,0x36,0x77,0x36,0x14,0x00 };//			128


#if (__SIZEOF_INT__ == 4)
//#if 4 == sizeof(gfx_u32)
#define ReturnCommand_gp  (unsigned)(29)
#define ReturnCommand_gm  (unsigned)(0x07 << ReturnCommand_gp)
#define ReturnCommand_NoCommand  (unsigned)(0x00<<ReturnCommand_gp)
#define ReturnCommand_GoUp  (unsigned)(0x01<<ReturnCommand_gp)
#define ReturnCommand_GoDn  (unsigned)(0x02<<ReturnCommand_gp)
#define ReturnCommand_GoLeft  (unsigned)(0x03<<ReturnCommand_gp)
#define ReturnCommand_GoRight  (unsigned)(0x04<<ReturnCommand_gp)
#define ReturnCommand_MaxValue  (unsigned)(0x08)
#else
#define ReturnCommand_gp  (unsigned)(13)
#define ReturnCommand_gm  (unsigned)(0x07 << ReturnCommand_gp)
#define ReturnCommand_NoCommand  (unsigned)(0x00<<ReturnCommand_gp)
#define ReturnCommand_GoUp  (unsigned)(0x01<<ReturnCommand_gp)
#define ReturnCommand_GoDn  (unsigned)(0x02<<ReturnCommand_gp)
#define ReturnCommand_GoLeft  (unsigned)(0x03<<ReturnCommand_gp)
#define ReturnCommand_GoRight  (unsigned)(0x04<<ReturnCommand_gp)
#define ReturnCommand_MaxValue  (unsigned)(0x08)
#endif
namespace GI
{
namespace Screen
{
	class String
	{
	public:
		String(GI::Dev::Screen *pDisplay);
		String(GI::Dev::Screen *pDisplay, char *String);
		~String();
		bool equal(GI::Screen::String *string);
		bool equal(char *string);
		void toUper();
		void toLower();
		void removeNewLine(GI::Screen::String *string);
		void setText(char* string);
		void setText(GI::Screen::String *string);
		void setText(GI::String *string);
		void setTextF(const char *pcString, ...);
		void setTextF(GI::String *string, ...);
		void setTextF(GI::Screen::String *string, ...);
		void append(char* string);
		void append(GI::Screen::String *string);
		void append(GI::String *string);
		void append(char Char);
		void appendF(const char *pcString, ...);
		void appendF(GI::String *string, ...);
		void appendF(GI::Screen::String *string, ...);
		void insert(GI::String* string, gfx_u32 location);
		void insert(GI::Screen::String* string, gfx_u32 location);
		void insert(char *string, gfx_u32 location);
		void clone(GI::Screen::String* string);
		void clear();
		char *subString(gfx_u32 position, gfx_u32 len);

		//#######################################################################################
		gfx_u8 getFontHeight()
		{
			return read_data_byte(pFont->ucHeight);
		}
		void getStrSelect(gfx_s32 *Start, gfx_s32 *SelStartReturn, gfx_s32 *SelLenReturn, gfx_s32 _XPush, gfx_s32 _YPush, gfx_s32 _XPull, gfx_s32 _YPull, gfx_s32 lX, gfx_s32 lY, gfx_u32 *return_command);
		gfx_s32 getStrWidth();
		gfx_s32 getStrRowsNr();
		StringProperties_t getStrProp();
		gfx_s32 drawString();
		gfx_s32 drawStringTiny();
		gfx_s32 getStrPropTiny();



		char *buff;

		tRectangle Capsule;
		GI::Dev::Screen *pDisplay;
		tFont *pFont;
		gfx_s32 length;
		gfx_u32 foreground_color;
		gfx_u32 background_color;
		bool ulOpaque;
		bool ulVisible;
		bool wordWrap;
		gfx_s32 lX;
		gfx_s32 lY;
		gfx_s32 _SelStart;
		gfx_s32 _SelLen;
		allign textAlign;
		/*
		 * Private variables.
		 */
		gfx_u32 modifyed;
		int error;
		//bool initialized;
	private:
		/*int vsnprintf (char *str, size_t count, const char *fmt, va_list args);
		void dopr (char *buffer, size_t maxlen, const char *format, va_list args);
		void fmtstr (char *buffer, size_t *currlen, size_t maxlen,
				    char *value, int flags, int min, int max);
		void fmtint (char *buffer, size_t *currlen, size_t maxlen,
				    long value, int base, int min, int max, int flags);
		void fmtfp (char *buffer, size_t *currlen, size_t maxlen,
				   LDOUBLE fvalue, int min, int max, int flags);
		void dopr_outch (char *buffer, size_t *currlen, size_t maxlen, char c );*/

	};
}
}

/*#####################################################*/
#ifdef USE_VISUAL_STUDIO
#include "string.cpp"
#endif
/*#####################################################*/
#endif /* LIB_LIB_GFX_STRING_H_ */
